const l=JSON.parse('{"key":"v-711b38ab","path":"/javadocs/javase/day12-%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%86%85%E9%83%A8%E7%B1%BB.html","title":"day12-接口和内部类","lang":"zh-CN","frontmatter":{"title":"day12-接口和内部类","icon":"note","breadcrumb":false,"description":"1.接口 1.1黑马信息管理系统集合改进 (应用) 使用数组容器的弊端; 1. 容器长度是固定的，不能根据添加功能自动增长 2. 没有提供用于赠删改查的方法 优化步骤; 1. 创建新的StudentDao类，OtherStudentDao 2. 创建ArrayList集合容器对象 3. OtherStudentDao中的方法声明，需要跟StudentD...","head":[["meta",{"property":"og:url","content":"https://note.gaofee.cc/javadocs/javase/day12-%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%86%85%E9%83%A8%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"代码岛"}],["meta",{"property":"og:title","content":"day12-接口和内部类"}],["meta",{"property":"og:description","content":"1.接口 1.1黑马信息管理系统集合改进 (应用) 使用数组容器的弊端; 1. 容器长度是固定的，不能根据添加功能自动增长 2. 没有提供用于赠删改查的方法 优化步骤; 1. 创建新的StudentDao类，OtherStudentDao 2. 创建ArrayList集合容器对象 3. OtherStudentDao中的方法声明，需要跟StudentD..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-16T07:52:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-16T07:52:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day12-接口和内部类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-16T07:52:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.接口","slug":"_1-接口","link":"#_1-接口","children":[{"level":3,"title":"1.1黑马信息管理系统集合改进 (应用)","slug":"_1-1黑马信息管理系统集合改进-应用","link":"#_1-1黑马信息管理系统集合改进-应用","children":[]},{"level":3,"title":"1.2黑马信息管理系统抽取Dao (应用)","slug":"_1-2黑马信息管理系统抽取dao-应用","link":"#_1-2黑马信息管理系统抽取dao-应用","children":[]},{"level":3,"title":"1.3接口的概述（理解）","slug":"_1-3接口的概述-理解","link":"#_1-3接口的概述-理解","children":[]},{"level":3,"title":"1.4接口的特点（记忆）","slug":"_1-4接口的特点-记忆","link":"#_1-4接口的特点-记忆","children":[]},{"level":3,"title":"1.5接口的成员特点（记忆）","slug":"_1-5接口的成员特点-记忆","link":"#_1-5接口的成员特点-记忆","children":[]},{"level":3,"title":"1.6类和接口的关系（记忆）","slug":"_1-6类和接口的关系-记忆","link":"#_1-6类和接口的关系-记忆","children":[]},{"level":3,"title":"1.7黑马信息管理系统使用接口改进 (应用)","slug":"_1-7黑马信息管理系统使用接口改进-应用","link":"#_1-7黑马信息管理系统使用接口改进-应用","children":[]},{"level":3,"title":"1.8黑马信息管理系统解耦合改进 (应用)","slug":"_1-8黑马信息管理系统解耦合改进-应用","link":"#_1-8黑马信息管理系统解耦合改进-应用","children":[]}]},{"level":2,"title":"2.接口组成更新","slug":"_2-接口组成更新","link":"#_2-接口组成更新","children":[{"level":3,"title":"2.1接口组成更新概述【理解】","slug":"_2-1接口组成更新概述【理解】","link":"#_2-1接口组成更新概述【理解】","children":[]},{"level":3,"title":"2.2接口中默认方法【应用】","slug":"_2-2接口中默认方法【应用】","link":"#_2-2接口中默认方法【应用】","children":[]},{"level":3,"title":"2.3接口中静态方法【应用】","slug":"_2-3接口中静态方法【应用】","link":"#_2-3接口中静态方法【应用】","children":[]},{"level":3,"title":"2.4接口中私有方法【应用】","slug":"_2-4接口中私有方法【应用】","link":"#_2-4接口中私有方法【应用】","children":[]}]},{"level":2,"title":"3.多态","slug":"_3-多态","link":"#_3-多态","children":[{"level":3,"title":"3.1多态的概述（记忆）","slug":"_3-1多态的概述-记忆","link":"#_3-1多态的概述-记忆","children":[]},{"level":3,"title":"3.2多态中的成员访问特点（记忆）","slug":"_3-2多态中的成员访问特点-记忆","link":"#_3-2多态中的成员访问特点-记忆","children":[]},{"level":3,"title":"3.3多态的好处和弊端（记忆）","slug":"_3-3多态的好处和弊端-记忆","link":"#_3-3多态的好处和弊端-记忆","children":[]},{"level":3,"title":"3.4多态中的转型（应用）","slug":"_3-4多态中的转型-应用","link":"#_3-4多态中的转型-应用","children":[]},{"level":3,"title":"3.5多态中转型存在的风险和解决方案 (应用)","slug":"_3-5多态中转型存在的风险和解决方案-应用","link":"#_3-5多态中转型存在的风险和解决方案-应用","children":[]},{"level":3,"title":"3.6黑马信息管理系统多态改进 (应用)","slug":"_3-6黑马信息管理系统多态改进-应用","link":"#_3-6黑马信息管理系统多态改进-应用","children":[]}]},{"level":2,"title":"4.内部类","slug":"_4-内部类","link":"#_4-内部类","children":[{"level":3,"title":"4.1 内部类的基本使用（理解）","slug":"_4-1-内部类的基本使用-理解","link":"#_4-1-内部类的基本使用-理解","children":[]},{"level":3,"title":"2.2 成员内部类（理解）","slug":"_2-2-成员内部类-理解","link":"#_2-2-成员内部类-理解","children":[]},{"level":3,"title":"2.3 局部内部类（理解）","slug":"_2-3-局部内部类-理解","link":"#_2-3-局部内部类-理解","children":[]},{"level":3,"title":"2.4 匿名内部类（应用）","slug":"_2-4-匿名内部类-应用","link":"#_2-4-匿名内部类-应用","children":[]},{"level":3,"title":"2.4 匿名内部类在开发中的使用（应用）","slug":"_2-4-匿名内部类在开发中的使用-应用","link":"#_2-4-匿名内部类在开发中的使用-应用","children":[]}]},{"level":2,"title":"5.Lambda表达式","slug":"_5-lambda表达式","link":"#_5-lambda表达式","children":[{"level":3,"title":"5.1体验Lambda表达式【理解】","slug":"_5-1体验lambda表达式【理解】","link":"#_5-1体验lambda表达式【理解】","children":[]},{"level":3,"title":"5.2Lambda表达式的标准格式【理解】","slug":"_5-2lambda表达式的标准格式【理解】","link":"#_5-2lambda表达式的标准格式【理解】","children":[]},{"level":3,"title":"5.3Lambda表达式练习1【应用】","slug":"_5-3lambda表达式练习1【应用】","link":"#_5-3lambda表达式练习1【应用】","children":[]},{"level":3,"title":"5.4Lambda表达式练习2【应用】","slug":"_5-4lambda表达式练习2【应用】","link":"#_5-4lambda表达式练习2【应用】","children":[]},{"level":3,"title":"5.5Lambda表达式练习3【应用】","slug":"_5-5lambda表达式练习3【应用】","link":"#_5-5lambda表达式练习3【应用】","children":[]},{"level":3,"title":"5.6Lambda表达式的省略模式【应用】","slug":"_5-6lambda表达式的省略模式【应用】","link":"#_5-6lambda表达式的省略模式【应用】","children":[]},{"level":3,"title":"5.7Lambda表达式的使用前提【理解】","slug":"_5-7lambda表达式的使用前提【理解】","link":"#_5-7lambda表达式的使用前提【理解】","children":[]},{"level":3,"title":"5.8Lambda表达式和匿名内部类的区别【理解】","slug":"_5-8lambda表达式和匿名内部类的区别【理解】","link":"#_5-8lambda表达式和匿名内部类的区别【理解】","children":[]}]}],"git":{"createdTime":1678931396000,"updatedTime":1678953156000,"contributors":[{"name":"“gaofee”","email":"“79527743@qq.com”","commits":2}]},"readingTime":{"minutes":16.87,"words":5060},"filePathRelative":"javadocs/javase/day12-接口和内部类.md","localizedDate":"2023年3月16日","autoDesc":true}');export{l as data};
