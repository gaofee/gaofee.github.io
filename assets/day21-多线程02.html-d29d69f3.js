const e=JSON.parse('{"key":"v-3637f993","path":"/javadocs/javase/day21-%E5%A4%9A%E7%BA%BF%E7%A8%8B02.html","title":"day21-多线程02","lang":"zh-CN","frontmatter":{"title":"day21-多线程02","icon":"note","breadcrumb":false,"description":"1.线程池 1.1 线程状态介绍 当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。线程对象在不同的时期有不同的状态。那么Java中的线程存在哪几种状态呢？Java中的线程 状态被定义在了java.lang.Thread.State枚举类中，State枚举类的源码如下： 通过源码我们可以看到Java中的线程存在6种状态，每...","head":[["meta",{"property":"og:url","content":"https://note.gaofee.cc/javadocs/javase/day21-%E5%A4%9A%E7%BA%BF%E7%A8%8B02.html"}],["meta",{"property":"og:site_name","content":"代码岛"}],["meta",{"property":"og:title","content":"day21-多线程02"}],["meta",{"property":"og:description","content":"1.线程池 1.1 线程状态介绍 当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。线程对象在不同的时期有不同的状态。那么Java中的线程存在哪几种状态呢？Java中的线程 状态被定义在了java.lang.Thread.State枚举类中，State枚举类的源码如下： 通过源码我们可以看到Java中的线程存在6种状态，每..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-16T07:52:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-16T07:52:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day21-多线程02\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-16T07:52:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.线程池","slug":"_1-线程池","link":"#_1-线程池","children":[{"level":3,"title":"1.1 线程状态介绍","slug":"_1-1-线程状态介绍","link":"#_1-1-线程状态介绍","children":[]},{"level":3,"title":"1.2 线程池-基本原理","slug":"_1-2-线程池-基本原理","link":"#_1-2-线程池-基本原理","children":[]},{"level":3,"title":"1.3 线程池-Executors默认线程池","slug":"_1-3-线程池-executors默认线程池","link":"#_1-3-线程池-executors默认线程池","children":[]},{"level":3,"title":"1.4 线程池-Executors创建指定上限的线程池","slug":"_1-4-线程池-executors创建指定上限的线程池","link":"#_1-4-线程池-executors创建指定上限的线程池","children":[]},{"level":3,"title":"1.5 线程池-ThreadPoolExecutor","slug":"_1-5-线程池-threadpoolexecutor","link":"#_1-5-线程池-threadpoolexecutor","children":[]},{"level":3,"title":"1.6 线程池-参数详解","slug":"_1-6-线程池-参数详解","link":"#_1-6-线程池-参数详解","children":[]},{"level":3,"title":"1.7 线程池-非默认任务拒绝策略","slug":"_1-7-线程池-非默认任务拒绝策略","link":"#_1-7-线程池-非默认任务拒绝策略","children":[]}]},{"level":2,"title":"2. 原子性","slug":"_2-原子性","link":"#_2-原子性","children":[{"level":3,"title":"2.1 volatile-问题","slug":"_2-1-volatile-问题","link":"#_2-1-volatile-问题","children":[]},{"level":3,"title":"2.2 volatile解决","slug":"_2-2-volatile解决","link":"#_2-2-volatile解决","children":[]},{"level":3,"title":"2.3 synchronized解决","slug":"_2-3-synchronized解决","link":"#_2-3-synchronized解决","children":[]},{"level":3,"title":"2.4 原子性","slug":"_2-4-原子性","link":"#_2-4-原子性","children":[]},{"level":3,"title":"2.5 volatile关键字不能保证原子性","slug":"_2-5-volatile关键字不能保证原子性","link":"#_2-5-volatile关键字不能保证原子性","children":[]},{"level":3,"title":"2.6 原子性_AtomicInteger","slug":"_2-6-原子性-atomicinteger","link":"#_2-6-原子性-atomicinteger","children":[]},{"level":3,"title":"2.7 AtomicInteger-内存解析","slug":"_2-7-atomicinteger-内存解析","link":"#_2-7-atomicinteger-内存解析","children":[]},{"level":3,"title":"2.8 AtomicInteger-源码解析","slug":"_2-8-atomicinteger-源码解析","link":"#_2-8-atomicinteger-源码解析","children":[]},{"level":3,"title":"2.9 悲观锁和乐观锁","slug":"_2-9-悲观锁和乐观锁","link":"#_2-9-悲观锁和乐观锁","children":[]}]},{"level":2,"title":"3. 并发工具类","slug":"_3-并发工具类","link":"#_3-并发工具类","children":[{"level":3,"title":"3.1 并发工具类-Hashtable","slug":"_3-1-并发工具类-hashtable","link":"#_3-1-并发工具类-hashtable","children":[]},{"level":3,"title":"3.2 并发工具类-ConcurrentHashMap基本使用","slug":"_3-2-并发工具类-concurrenthashmap基本使用","link":"#_3-2-并发工具类-concurrenthashmap基本使用","children":[]},{"level":3,"title":"3.3 并发工具类-ConcurrentHashMap1.7原理","slug":"_3-3-并发工具类-concurrenthashmap1-7原理","link":"#_3-3-并发工具类-concurrenthashmap1-7原理","children":[]},{"level":3,"title":"3.4 并发工具类-ConcurrentHashMap1.8原理","slug":"_3-4-并发工具类-concurrenthashmap1-8原理","link":"#_3-4-并发工具类-concurrenthashmap1-8原理","children":[]},{"level":3,"title":"3.5 并发工具类-CountDownLatch","slug":"_3-5-并发工具类-countdownlatch","link":"#_3-5-并发工具类-countdownlatch","children":[]},{"level":3,"title":"3.6 并发工具类-Semaphore","slug":"_3-6-并发工具类-semaphore","link":"#_3-6-并发工具类-semaphore","children":[]}]}],"git":{"createdTime":1678931396000,"updatedTime":1678953156000,"contributors":[{"name":"“gaofee”","email":"“79527743@qq.com”","commits":2}]},"readingTime":{"minutes":21.5,"words":6449},"filePathRelative":"javadocs/javase/day21-多线程02.md","localizedDate":"2023年3月16日","autoDesc":true}');export{e as data};
