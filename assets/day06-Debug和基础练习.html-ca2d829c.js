const e=JSON.parse('{"key":"v-45f351f4","path":"/javadocs/javase/day06-Debug%E5%92%8C%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0.html","title":"day06-Debug和基础练习","lang":"zh-CN","frontmatter":{"title":"day06-Debug和基础练习","icon":"note","breadcrumb":false,"description":"1.Debug模式 1.1 什么是Debug模式 是供程序员使用的程序调试工具，它可以用于查看程序的执行流程，也可以用于追踪程序执行过程来调试程序。 1.2 Debug介绍与操作流程\\r如何加断点; \\r选择要设置断点的代码行，在行号的区域后面单击鼠标左键即可; \\r如何运行加了断点的程序; \\r在代码区域右键Debug执行; \\r看哪里; \\r看Debugger...","head":[["meta",{"property":"og:url","content":"https://note.gaofee.cc/javadocs/javase/day06-Debug%E5%92%8C%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0.html"}],["meta",{"property":"og:site_name","content":"代码岛"}],["meta",{"property":"og:title","content":"day06-Debug和基础练习"}],["meta",{"property":"og:description","content":"1.Debug模式 1.1 什么是Debug模式 是供程序员使用的程序调试工具，它可以用于查看程序的执行流程，也可以用于追踪程序执行过程来调试程序。 1.2 Debug介绍与操作流程\\r如何加断点; \\r选择要设置断点的代码行，在行号的区域后面单击鼠标左键即可; \\r如何运行加了断点的程序; \\r在代码区域右键Debug执行; \\r看哪里; \\r看Debugger..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-16T07:52:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-16T07:52:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day06-Debug和基础练习\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-16T07:52:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.Debug模式","slug":"_1-debug模式","link":"#_1-debug模式","children":[{"level":3,"title":"1.1 什么是Debug模式","slug":"_1-1-什么是debug模式","link":"#_1-1-什么是debug模式","children":[]},{"level":3,"title":"1.2 Debug介绍与操作流程","slug":"_1-2-debug介绍与操作流程","link":"#_1-2-debug介绍与操作流程","children":[]}]},{"level":2,"title":"2. 进制的介绍与书写格式","slug":"_2-进制的介绍与书写格式","link":"#_2-进制的介绍与书写格式","children":[{"level":3,"title":"2.1 进制的介绍与书写格式","slug":"_2-1-进制的介绍与书写格式","link":"#_2-1-进制的介绍与书写格式","children":[]},{"level":3,"title":"2.2 任意进制到十进制的转换","slug":"_2-2-任意进制到十进制的转换","link":"#_2-2-任意进制到十进制的转换","children":[]},{"level":3,"title":"2.3 进制转换-十进制到任意进制转换","slug":"_2-3-进制转换-十进制到任意进制转换","link":"#_2-3-进制转换-十进制到任意进制转换","children":[]},{"level":3,"title":"2.4  快速进制转换法","slug":"_2-4-快速进制转换法","link":"#_2-4-快速进制转换法","children":[]},{"level":3,"title":"2.5  原码反码补码","slug":"_2-5-原码反码补码","link":"#_2-5-原码反码补码","children":[]},{"level":3,"title":"2.6 位运算-基本位运算符","slug":"_2-6-位运算-基本位运算符","link":"#_2-6-位运算-基本位运算符","children":[]},{"level":3,"title":"2.7 位运算-位移运算符","slug":"_2-7-位运算-位移运算符","link":"#_2-7-位运算-位移运算符","children":[]}]},{"level":2,"title":"3.基础练习","slug":"_3-基础练习","link":"#_3-基础练习","children":[{"level":3,"title":"3.1 数据交换","slug":"_3-1-数据交换","link":"#_3-1-数据交换","children":[]},{"level":3,"title":"3.2 数组反转【应用】","slug":"_3-2-数组反转【应用】","link":"#_3-2-数组反转【应用】","children":[]},{"level":3,"title":"3.3 二维数组概述","slug":"_3-3-二维数组概述","link":"#_3-3-二维数组概述","children":[]},{"level":3,"title":"3.4 二维数组动态初始化","slug":"_3-4-二维数组动态初始化","link":"#_3-4-二维数组动态初始化","children":[]},{"level":3,"title":"3.5  二维数组访问元素的细节问题","slug":"_3-5-二维数组访问元素的细节问题","link":"#_3-5-二维数组访问元素的细节问题","children":[]},{"level":3,"title":"3.6 二维数组静态初始化","slug":"_3-6-二维数组静态初始化","link":"#_3-6-二维数组静态初始化","children":[]},{"level":3,"title":"3.7 二维数组遍历","slug":"_3-7-二维数组遍历","link":"#_3-7-二维数组遍历","children":[]},{"level":3,"title":"3.8 二维数组求和","slug":"_3-8-二维数组求和","link":"#_3-8-二维数组求和","children":[]}]}],"git":{"createdTime":1678931396000,"updatedTime":1678953156000,"contributors":[{"name":"“gaofee”","email":"“79527743@qq.com”","commits":2}]},"readingTime":{"minutes":12.21,"words":3662},"filePathRelative":"javadocs/javase/day06-Debug和基础练习.md","localizedDate":"2023年3月16日","autoDesc":true}');export{e as data};
