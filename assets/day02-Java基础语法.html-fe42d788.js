const e=JSON.parse('{"key":"v-2fa28283","path":"/javadocs/javase/day02-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html","title":"day02-Java基础语法","lang":"zh-CN","frontmatter":{"title":"day02-Java基础语法","icon":"note","breadcrumb":false,"description":"1 类型转换 在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。 1.1 隐式转换(理解) ​\\t把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如： ```java double num = 10; // 将int类型的10直接赋值给double类型 Sy...","head":[["meta",{"property":"og:url","content":"https://note.gaofee.cc/javadocs/javase/day02-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"代码岛"}],["meta",{"property":"og:title","content":"day02-Java基础语法"}],["meta",{"property":"og:description","content":"1 类型转换 在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。 1.1 隐式转换(理解) ​\\t把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如： ```java double num = 10; // 将int类型的10直接赋值给double类型 Sy..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-16T07:52:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-16T07:52:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day02-Java基础语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-16T07:52:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1 类型转换","slug":"_1-类型转换","link":"#_1-类型转换","children":[{"level":3,"title":"1.1 隐式转换(理解)","slug":"_1-1-隐式转换-理解","link":"#_1-1-隐式转换-理解","children":[]},{"level":3,"title":"1.2 强制转换(理解)","slug":"_1-2-强制转换-理解","link":"#_1-2-强制转换-理解","children":[]},{"level":3,"title":"1.3 类型转换案例(理解)","slug":"_1-3-类型转换案例-理解","link":"#_1-3-类型转换案例-理解","children":[]}]},{"level":2,"title":"2. 运算符","slug":"_2-运算符","link":"#_2-运算符","children":[{"level":3,"title":"2.1 算术运算符","slug":"_2-1-算术运算符","link":"#_2-1-算术运算符","children":[]},{"level":3,"title":"2.2 自增自减运算符（理解）","slug":"_2-2-自增自减运算符-理解","link":"#_2-2-自增自减运算符-理解","children":[]},{"level":3,"title":"2.3 赋值运算符（应用）","slug":"_2-3-赋值运算符-应用","link":"#_2-3-赋值运算符-应用","children":[]},{"level":3,"title":"2.4 关系运算符（应用）","slug":"_2-4-关系运算符-应用","link":"#_2-4-关系运算符-应用","children":[]},{"level":3,"title":"2.5 逻辑运算符（应用）","slug":"_2-5-逻辑运算符-应用","link":"#_2-5-逻辑运算符-应用","children":[]},{"level":3,"title":"2.6 短路逻辑运算符（理解）","slug":"_2-6-短路逻辑运算符-理解","link":"#_2-6-短路逻辑运算符-理解","children":[]},{"level":3,"title":"2.7 三元运算符（理解）","slug":"_2-7-三元运算符-理解","link":"#_2-7-三元运算符-理解","children":[]},{"level":3,"title":"2.8 三元运算符案例(应用)","slug":"_2-8-三元运算符案例-应用","link":"#_2-8-三元运算符案例-应用","children":[]}]},{"level":2,"title":"3. 流程控制语句","slug":"_3-流程控制语句","link":"#_3-流程控制语句","children":[{"level":3,"title":"3.1 流程控制语句分类(了解)","slug":"_3-1-流程控制语句分类-了解","link":"#_3-1-流程控制语句分类-了解","children":[]},{"level":3,"title":"3.2 顺序结构(了解)","slug":"_3-2-顺序结构-了解","link":"#_3-2-顺序结构-了解","children":[]},{"level":3,"title":"3.3 分支结构之if语句","slug":"_3-3-分支结构之if语句","link":"#_3-3-分支结构之if语句","children":[]}]}],"git":{"createdTime":1678931396000,"updatedTime":1678953156000,"contributors":[{"name":"“gaofee”","email":"“79527743@qq.com”","commits":2}]},"readingTime":{"minutes":14.81,"words":4442},"filePathRelative":"javadocs/javase/day02-Java基础语法.md","localizedDate":"2023年3月16日","autoDesc":true}');export{e as data};
