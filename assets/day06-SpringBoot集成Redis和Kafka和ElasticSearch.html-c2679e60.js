import{ab as e,G as p,H as c,E as n,S as s,N as t,ac as o,W as l}from"./framework-251de721.js";const i={},u=o(`<h1 id="第6课-springboot集成redis、kafka、elasticsearch" tabindex="-1"><a class="header-anchor" href="#第6课-springboot集成redis、kafka、elasticsearch" aria-hidden="true">#</a> 第6课 SpringBoot集成Redis、Kafka、ElasticSearch</h1><h1 id="【学习重点】" tabindex="-1"><a class="header-anchor" href="#【学习重点】" aria-hidden="true">#</a> 【学习重点】</h1><ol><li>SpringBoot集成Redis</li><li>SpringBoot集成Kafka</li><li>SpringBoot集成ElasticSearch</li></ol><h1 id="【考核要求】" tabindex="-1"><a class="header-anchor" href="#【考核要求】" aria-hidden="true">#</a> 【考核要求】</h1><ol><li>SpringBoot集成Redis及使用</li><li>SpringBoot集成Kafka及使用</li><li>SpringBoot集成ElasticSearch及使用</li></ol><h1 id="【学习内容】" tabindex="-1"><a class="header-anchor" href="#【学习内容】" aria-hidden="true">#</a> 【学习内容】</h1><h2 id="_6-1-springboot集成redis及使用" tabindex="-1"><a class="header-anchor" href="#_6-1-springboot集成redis及使用" aria-hidden="true">#</a> 6.1 SpringBoot集成Redis及使用</h2><p>非关系型数据、key/value存储</p><p>基于内存存储（可以序列化到磁盘），每秒支持10万次左右读写。</p><p>单线程：命令的执行是原子性的</p><p>应用缓存来提高服务性能</p><p>消息队列、注册中心</p><p>可以配置集群实现高可以：实现方案</p><figure><img src="https://gaofee.cc/images/202303171108009.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#服务启动</span>
<span class="token comment">#安装目录</span>
<span class="token builtin class-name">cd</span> /usr/local/src/redis/
<span class="token comment">#启动服务,指定redis配置</span>
./bin/redis-server conf/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- redis依赖 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#redis配置</span>
<span class="token key attr-name">spring.redis.host</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.16.129</span>
<span class="token key attr-name">spring.redis.port</span><span class="token punctuation">=</span><span class="token value attr-value">6379</span>
<span class="token key attr-name">spring.redis.database</span><span class="token punctuation">=</span><span class="token value attr-value">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//redis使用</span>
redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> name <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-2-springboot集成kafka及使用" tabindex="-1"><a class="header-anchor" href="#_6-2-springboot集成kafka及使用" aria-hidden="true">#</a> 6.2 SpringBoot集成Kafka及使用</h2><p>消息中间件：rabbitMq</p><p>kafka天然支持集群搭建</p><p>实现异步操作，提升系统吞吐量（整个系统服务能力）</p><p>解决问题：分布式服务之间通信（异步）</p><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> <img src="https://gaofee.cc/images/202303171108010.png" alt="Kafka" loading="lazy"></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#服务启动</span>
<span class="token builtin class-name">cd</span> /usr/local/src/kafka/kafka <span class="token comment">#单机版安装目录</span>
<span class="token comment">#-daemon守候线程方式启动zk</span>
./bin/zookeeper-server-start.sh <span class="token parameter variable">-daemon</span> config/zookeeper.properties
<span class="token comment">#-daemon守候线程方式启动kafka</span>
./bin/kafka-server-start.sh <span class="token parameter variable">-daemon</span> config/server.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- kafka依赖 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-kafka-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.54<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#kafka配置</span>
<span class="token comment">#指定kafka 代理地址，可以多个</span>
<span class="token key attr-name">spring.kafka.bootstrap-servers</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.16.129:9092</span>
<span class="token key attr-name">spring.kafka.producer.retries</span><span class="token punctuation">=</span><span class="token value attr-value">0</span>
<span class="token comment"># 每次批量发送消息的数量</span>
<span class="token key attr-name">spring.kafka.producer.batch-size</span><span class="token punctuation">=</span><span class="token value attr-value">16384</span>
<span class="token key attr-name">spring.kafka.producer.buffer-memory</span><span class="token punctuation">=</span><span class="token value attr-value">33554432</span>
<span class="token comment"># 指定消息key和消息体的编解码方式</span>
<span class="token key attr-name">spring.kafka.producer.key-serializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.StringSerializer</span>
<span class="token key attr-name">spring.kafka.producer.value-serializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.StringSerializer</span>

<span class="token comment"># 指定默认消费者group id</span>
<span class="token key attr-name">spring.kafka.consumer.group-id</span><span class="token punctuation">=</span><span class="token value attr-value">test-group</span>
<span class="token key attr-name">spring.kafka.consumer.auto-offset-reset</span><span class="token punctuation">=</span><span class="token value attr-value">earliest</span>
<span class="token key attr-name">spring.kafka.consumer.enable-auto-commit</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">spring.kafka.consumer.auto-commit-interval</span><span class="token punctuation">=</span><span class="token value attr-value">100</span>
<span class="token comment"># 指定消息key和消息体的编解码方式</span>
<span class="token key attr-name">spring.kafka.consumer.key-deserializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.StringDeserializer</span>
<span class="token key attr-name">spring.kafka.consumer.value-deserializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.StringDeserializer</span>
<span class="token comment">#发送消息，会自动创建主题，当主题未创建时，监听会报错，服务无法启动</span>
<span class="token key attr-name">spring.kafka.listener.missing-topics-fatal</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//发送消息</span>
<span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">KafkaTemplate</span> kafkaTemplate<span class="token punctuation">;</span>

<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> userMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> userJsonStr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>userMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
kafkaTemplate<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;testTopic&quot;</span><span class="token punctuation">,</span>userJsonStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//消费消息</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KafkaConsumer</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>topics <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;testTopic&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token class-name">ConsumerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> consumerRecord<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the Message:&quot;</span><span class="token operator">+</span>consumerRecord<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> value <span class="token operator">=</span> consumerRecord<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-3-springboot集成elasticsearch及使用" tabindex="-1"><a class="header-anchor" href="#_6-3-springboot集成elasticsearch及使用" aria-hidden="true">#</a> 6.3 SpringBoot集成ElasticSearch及使用</h2><p>ElasticSearch是一个基于Lucene的<strong>搜索服务器</strong>。（solr）</p><p>基于Lucene工具包，jar、倒排索引（文档索引过程）</p><p>ik分词器、实现高亮、基于位置搜索</p><table><thead><tr><th>Elasticsearch</th><th>关系型数据库Mysql</th></tr></thead><tbody><tr><td>索引(index)</td><td>数据库(databases)</td></tr><tr><td>类型(type)</td><td>表(table)</td></tr><tr><td>文档(document)</td><td>行(row)</td></tr></tbody></table><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 服务启动 --&gt;</span>
su - es;切换用户
cd /usr/local/src/elasticsearch/es/; 到安装目录
./bin/elasticsearch -d; -d以守候线程的方式启动项目
<span class="token comment">&lt;!-- es依赖 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- es工具类依赖了pagehelper --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#es配置</span>
<span class="token comment"># 9200端口是用来让HTTP REST API来访问ElasticSearch，而9300端口是传输层监听的默认端口</span>
<span class="token comment">#spring.data.elasticsearch.cluster-nodes=192.168.16.129:9300</span>
<span class="token comment">#cluster.name需要与config/elasticsearch.yml中的cluster.name一致</span>
<span class="token comment">#spring.data.elasticsearch.cluster-name=elasticsearch</span>
<span class="token comment">#Spring data 使用</span>
<span class="token comment">#spring.data.elasticsearch.repositories.enabled=true</span>
<span class="token key attr-name">spring.elasticsearch.rest.uris</span><span class="token punctuation">=</span><span class="token value attr-value">http://192.168.42.179:9200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//es使用</span>
<span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>indexName <span class="token operator">=</span> <span class="token string">&quot;blog&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;article&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">8210249797764830332L</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> summary<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//模板调用</span>
<span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">ElasticsearchTemplate</span> elasticsearchTemplate<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SpringBoot整合Elasticsearch报错</p>`,38),r={href:"https://www.jianshu.com/p/4d6bedded895",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.cnblogs.com/fanqisoft/p/10356698.html",target:"_blank",rel:"noopener noreferrer"};function d(v,m){const a=l("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[n("a",r,[s("https://www.jianshu.com/p/4d6bedded895"),t(a)])]),n("p",null,[n("a",k,[s("https://www.cnblogs.com/fanqisoft/p/10356698.html"),t(a)])])])}const b=e(i,[["render",d],["__file","day06-SpringBoot集成Redis和Kafka和ElasticSearch.html.vue"]]);export{b as default};
